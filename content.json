{"meta":{"title":"Agile","subtitle":null,"description":null,"author":"Sean Yin","url":"http://seanyinx.github.io"},"pages":[{"title":"About","date":"2016-12-18T03:20:49.000Z","updated":"2016-12-18T03:20:49.981Z","comments":true,"path":"About/index.html","permalink":"http://seanyinx.github.io/About/index.html","excerpt":"","text":""},{"title":"Categories","date":"2016-12-18T03:34:19.000Z","updated":"2016-12-18T03:34:19.414Z","comments":true,"path":"Categories/index.html","permalink":"http://seanyinx.github.io/Categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Stats Calculator with TDD Part 1","slug":"Stats-Calculator-with-TDD-Part-1","date":"2016-12-18T15:19:42.000Z","updated":"2016-12-18T15:19:42.977Z","comments":true,"path":"2016/12/18/Stats-Calculator-with-TDD-Part-1/","link":"","permalink":"http://seanyinx.github.io/2016/12/18/Stats-Calculator-with-TDD-Part-1/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Test Driven Development Introduction","slug":"Test-Driven-Development-Introduction","date":"2016-12-18T03:29:15.000Z","updated":"2016-12-18T15:32:34.508Z","comments":true,"path":"2016/12/18/Test-Driven-Development-Introduction/","link":"","permalink":"http://seanyinx.github.io/2016/12/18/Test-Driven-Development-Introduction/","excerpt":"Test Driven Development (TDD) is one of the eXtreme Programming (XP) practices developed by Kent Beck.It promotes repetitions of short coding cycles, to evolve the solutions with new requirements.","text":"Test Driven Development (TDD) is one of the eXtreme Programming (XP) practices developed by Kent Beck.It promotes repetitions of short coding cycles, to evolve the solutions with new requirements. The Coding Cycle of TDDTDD has a “mantra” with 3 steps, red/green/refactor: Write a simplest failing test case (hence red), before writing any production code. Write minimal production code possible to pass the failing test case (green) Refactor test case or production code The Benefit of TDDBetter designAs we know, tightly coupled code are hard to test. Since we always write tests before any production code, our code are always testable,meaning it is hard to write tightly coupled code with TDD. Much less code debuggingWe are working in short cycles of red/green/refactor with TDD. There won’t be much code written after the previous time our tests passed.That limits the scope of the bug we introduced and makes it very easy to spot. No fear to break codeTDD tends to produce code with very high test coverage (90%+ is very easy to achieve), since tests are always written first.It’s much less likely to break the code accidentally with such high code coverage. Continuous code improvement with refactoringTests are vital to refactoring. We are more likely to improve our code quality with refactoring, because the fear to break code is eliminated with tests.Or, nobody will touch bad code. We are afraid that the bad code will be ours, if we break it. Test case as documentationIf written well, test cases are the best documentation, because they are always up to date and describe the exact scenarios on how to use the production code. How To Start?TDD is an easy-to-learn but hard-to-master skill. The best way to improve our skill on TDD is through practices.There are many exercises called Katas, which can help accelerate our learning process.I will use one of the simplest Kata, Calc Stats to demonstrate how to get started with TDD in my next post.","categories":[{"name":"TDD","slug":"TDD","permalink":"http://seanyinx.github.io/categories/TDD/"}],"tags":[{"name":"TDD","slug":"TDD","permalink":"http://seanyinx.github.io/tags/TDD/"},{"name":"XP","slug":"XP","permalink":"http://seanyinx.github.io/tags/XP/"},{"name":"Testing","slug":"Testing","permalink":"http://seanyinx.github.io/tags/Testing/"}]},{"title":"Hello World","slug":"Hello-World","date":"2016-12-18T03:26:00.000Z","updated":"2016-12-18T03:26:00.180Z","comments":true,"path":"2016/12/18/Hello-World/","link":"","permalink":"http://seanyinx.github.io/2016/12/18/Hello-World/","excerpt":"","text":"","categories":[],"tags":[]}]}